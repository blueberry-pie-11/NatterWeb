name: Build Python Nuitka Executable

on:
  workflow_dispatch:  # 手动触发

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # 根据你的项目需要调整版本

      - name: Install Nuitka and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          fi

      - name: Check if ntsub.bin exists (Fail if missing)
        id: check-ntsub
        run: |
          if [ ! -f "ntsub.bin" ]; then
            echo "::error::ntsub.bin does not exist. Stopping workflow."
            exit 1  # 终止工作流
          else
            echo "ntsub.bin exists. Continuing..."
          fi

      - name: Build ntsub.py with Nuitka
        if: steps.check-ntsub.outcome == 'success'  # 仅在前一步成功时运行
        run: |
          python -m nuitka \
              ntsub.py \
              --standalone \
              --onefile \
              --output-dir=dist \
              --follow-imports

      - name: Check ntsub.bin again (Verify build)
        if: steps.check-ntsub.outcome == 'success'
        run: |
          if [ -f "dist/ntsub.bin" ]; then
            echo "ntsub.bin has been built successfully."
          else
            echo "::error::ntsub.bin was not built."
            exit 1
          fi

      - name: Build with Nuitka (app.py)
        if: steps.check-ntsub.outcome == 'success'
        run: |
          python -m nuitka app.py \
            --standalone \
            --onefile \
            --enable-plugin=anti-bloat \
            --include-data-file=./plugin/notification/pg.py=plugin/notification/pg.py \
            --include-data-dir=./static/=static/ \
            --include-data-dir=./templates/=templates/ \
            --include-data-dir=./plugin/=plugin/ \
            --include-data-dir=./plugin/notification/templates/=plugin/notification/templates/ \
            --include-data-dir=./plugin/notification/static/=plugin/notification/static/ \
            --include-package=email \
            --follow-imports \
            --output-dir=dist

      - name: Verify Package
        if: steps.check-ntsub.outcome == 'success'
        run: |
          ls -l dist/app.dist/plugin/notification/  # 检查输出目录结构

      - name: Compress the output
        if: steps.check-ntsub.outcome == 'success'
        run: |
          cd dist
          mkdir -p artifact
          mv ntsub.bin ./artifact/
          mv app.bin ./artifact/

      - name: Upload Artifact
        if: steps.check-ntsub.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: standalone-app
          path: dist/artifact
          retention-days: 7  # 设置产物保留天数
