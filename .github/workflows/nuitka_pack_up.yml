name: Build Python Nuitka Executable

on:
  workflow_dispatch:  # 手动触发

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # 根据你的项目需要调整版本

      - name: Install Nuitka and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka
          pip install -r requirements.txt  # 如果有requirements.txt
          
      - name: Build with Nuitka
        run: |    
          python -m nuitka app.py \
            --standalone \
            --onefile \
            --enable-plugin=anti-bloat \
            --recurse-to=plugin.notification.pg \
            --include-data-file=./plugin/notification/pg.py=plugin/notification/pg.py \
            --include-data-dir=./static/=static/ \
            --include-data-dir=./templates/=templates/ \
            --include-data-dir=./plugin/=plugin/ \
            --include-data-dir=./plugin/notification/templates/=plugin/notification/templates/ \
            --include-data-dir=./plugin/notification/static/=plugin/notification/static/ \
            --include-package=email \
            --follow-imports \
            --output-dir=dist

          python -m nuitka \
              ntsub.py \
             --standalone \
             --onefile \
             --output-dir=dist \
             --follow-imports 
             
      - name: Verify Package
        run: |
          ls -l dist/app.dist/plugin/notification/  # 检查输出目录结构
          
      - name: Compress the output
        run: |
          cd dist
          tar -czvf app.tar.gz app.dist/
          mkdir -p ../artifact
          mv app.tar.gz ../artifact/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: standalone-app
          path: artifact/app.tar.gz
          retention-days: 7  # 设置产物保留天数
